/*class*/class AuskunftsHamster extends AllroundHamster {

    final static int ANZAHL = Territorium.getAnzahlReihen();

    boolean[][] verbindungen;

    AuskunftsHamster(int r, int s, int b) {
        super(r, s, b, AuskunftsHamster.ANZAHL * AuskunftsHamster.ANZAHL);
        // Hamster hat genuegend Koerner im Maul
        this.laufeZuKachel(0, 0);
        this.setzeBlickrichtung(Hamster.OST);
        this.verbindungen = new boolean[ANZAHL][ANZAHL];
    }

    void ermittleDirektVerbindungen() {
        for (int r = 0; r < AuskunftsHamster.ANZAHL; r++) {
            this.ermittle();
            for (int s = 0; s < AuskunftsHamster.ANZAHL - 1; s++) {
                this.vor();
                this.ermittle();
            }
            if (r % 2 == 0) {
                this.rechtsUm();
                if (this.vornFrei()) {
                    this.vor();
                    this.rechtsUm();
                }
            } else {
                this.linksUm();
                if (this.vornFrei()) {
                    this.vor();
                    this.linksUm();
                }
            }
        }
    }

    void ermittle() {
        if (this.kornDa()) {
            this.verbindungen[this.getReihe()][this.getSpalte()] = true;
        } else {
            this.verbindungen[this.getReihe()][this.getSpalte()] = false;
        }
    }

    void mirror() {
        for(int r = 0; r < AuskunftsHamster.ANZAHL; r++) {
            for(int s = 0; s < AuskunftsHamster.ANZAHL; s++) {
                if(verbindungen[r][s] || verbindungen[s][r] || r == s) {
                    verbindungen[r][s] = true;
                    verbindungen[s][r] = true;
                }
            }
        }
    }

    void matixOut(){
        for(int r = 0; r < AuskunftsHamster.ANZAHL; r++) {
            for(int s = r; s < AuskunftsHamster.ANZAHL; s++) {
                this.laufeZuKachel(r, s);
                if(!verbindungen[r][s]) gib();
            }
        }
    }

    void markiere() {
        if (this.verbindungen[this.getReihe()][this.getSpalte()]) {
            this.gib();
        }
    }
}