boolean ende=false;



void main() {
    suche();
    if(!ende) {
        suche();
    }
}



void suche(){
    if(linksFrei() && !kornDa() && !ende) {
        gib();
        linksUm();
        vor();
        suche();
        vor();
        linksUm();
        nimm();
    }
    if(vornFrei() && !kornDa() && !ende) {
        gib();
        vor();
        suche();
        vor();
        kehrt();
        nimm();
    }
    if(rechtsFrei() && !kornDa() && !ende) {
        gib();
        rechtsUm();
        vor();
        suche();
        vor();
        rechtsUm();
        nimm();
    }
    if(zweiKornDa() && !ende) {
        ende=true;
        nimm();
        nimm();
        kehrt();
    }
    else {
        kehrt();
    }
}
    
boolean zweiKornDa() {
    if(!kornDa()) {
        return false;
    }
    nimm();
    if(kornDa()) {
        gib();
        return true;
    }
    else {
        gib();
        return false;
    }
}



boolean rechtsFrei() {
    rechtsUm();
    if (vornFrei()) {
        linksUm();
        return true;
    } else {   
        linksUm();
        return false;
    }
}  



boolean linksFrei() {
    linksUm();
    if (vornFrei()) {
        rechtsUm();
        return true;
    } else {   
        rechtsUm();
        return false;
    }
}



void rechtsUm() {
  linksUm();
  linksUm();
  linksUm();
}



void kehrt() {
    linksUm();
    linksUm();
}