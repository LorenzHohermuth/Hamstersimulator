/*object-oriented program*/
BacisHamster romeo = new BacisHamster();
BacisHamster julia = new BacisHamster();

class BacisHamster extends Hamster{
    public void rechtsUm(){
        linksUm();
        linksUm();
        linksUm();
    }

    public void kehr(){
        linksUm();
        linksUm();
    }

    public void wall(){
        while(vornFrei()) {
            vor();
        }
    }

    public void backToCorn() {
        while(vornFrei() && !kornDa()) {
            vor();
        }
        if(kornDa()) {
            nimm();
        }
        kehr();
    }

    public boolean rechtsKorn() {
        rechtsUm();
        vor();
        boolean output = kornDa();
        kehr();
        vor();
        rechtsUm();
        return output;
    }

    public boolean rechtsFrei() {
        rechtsUm();
        boolean output = vornFrei();
        linksUm();
        return output;
    }

    public void searchPlace() {
        if(!rechtsFrei() || rechtsKorn()) {
            vor();
        }
        else{
            rechtsUm();
            vor();
            gib();
            kehr();
            vor();
            linksUm();
        }
        
    }
}
void main() {
    romeo.init(2, 2, Hamster.OST, 0);
    julia.init(2, 7, Hamster.WEST, 0);
    bridge();
}

void bridge() {
    romeo.kehr();
    while(romeo.getSpalte() < julia.getSpalte()) {
        if(romeo.maulLeer()) {
            romeo.backToCorn(); 
        }else{
            romeo.searchPlace();
        }
    }
    julia.wall();
    romeo.wall();
}
