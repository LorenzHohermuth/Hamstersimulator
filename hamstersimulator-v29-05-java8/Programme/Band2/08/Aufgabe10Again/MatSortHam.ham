/*class*/public class MatSortHam extends AllroundHamster{
    
    MatSortHam(int r, int s, int b, int k){
        super(r,s,b,k);
        
    }

    void exe(){
        int[][] mat = scan();
        mat = matrixSortieren(mat);
        give(mat);
    }

    int[][] scan(){
        int[][] field = new int[Territorium.getAnzahlReihen()][Territorium.getAnzahlSpalten()];
        for(int r = 0; r < Territorium.getAnzahlReihen(); r++) {
            for(int s = 0; s < Territorium.getAnzahlSpalten(); s++) {
                field[r][s] = Territorium.getAnzahlKoerner(r,s);
            }
        }
        return field;
    }
    
    int[][] matrixSortieren(int[][] matrix){
        int before = matrix[0][0];
        int rBefore = 0;
        int sBefore = 0;
        for(int r = 0; r < matrix.length; r++) {
            for(int s = 1; s < matrix[0].length; s++) {
                if(before > matrix[r][s]) {
                    matrix[rBefore][sBefore] = matrix[r][s];
                    matrix[r][s] = matrix[rBefore][sBefore];
                    before = matrix[0][0];
                    rBefore = 0;
                    sBefore = 0;
                    printMat(matrix);
                }else{
                    rBefore = r;
                    sBefore = s;
                    before = matrix[r][s];
                }
            }
        }
        return matrix;
    }


    void give(int[][] mat){
        for(int r = 0; r < Territorium.getAnzahlReihen(); r++) {
            for(int s = 0; s < Territorium.getAnzahlSpalten(); s++) {
                laufeZuKachel(r,s);
                nimmAlle();
            }
        }
        for(int r = 0; r < Territorium.getAnzahlReihen(); r++) {
            for(int s = 0; s < Territorium.getAnzahlSpalten(); s++) {
                laufeZuKachel(r,s);
                gib(mat[r][s]);
            }
        }
    }

    void printMat(int[][] Mat){
        String Output = "";
        for(int r = 0; r < Territorium.getAnzahlReihen(); r++) {
            for(int s = 0; s < Territorium.getAnzahlSpalten(); s++) {
                Output += schreib(Integer.toString(Mat[r][s]));
            }
            Output += '\n';
        }
        schreib(Output);
    }

}
